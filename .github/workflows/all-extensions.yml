name: Build All Extensions

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-vscode:
    name: Build VS Code Extension
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Install vsce
      run: npm install -g @vscode/vsce
    
    - name: Package extension
      run: vsce package --no-dependencies
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension
        path: '*.vsix'

  build-claude:
    name: Build Claude Code Extension
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build DXT
      run: npm run build:dxt
    
    - name: Upload DXT artifact
      uses: actions/upload-artifact@v4
      with:
        name: claude-extension
        path: '*.dxt'

  build-jetbrains:
    name: Build JetBrains Plugin
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Build plugin
      working-directory: ./jetbrains-plugin
      run: ./gradlew buildPlugin -x buildSearchableOptions
    
    - name: Upload plugin artifact
      uses: actions/upload-artifact@v4
      with:
        name: jetbrains-plugin
        path: jetbrains-plugin/build/distributions/*.zip

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-vscode, build-claude, build-jetbrains]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Hanzo AI Extensions ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          # Hanzo AI Extensions Release
          
          ## Installation Instructions
          
          ### VS Code / Cursor / Windsurf
          1. Download `hanzo-ai-vscode.vsix`
          2. Open Extensions → ⋮ → Install from VSIX
          3. Select the downloaded file
          
          ### Claude Code
          1. Download `hanzo-ai-claude.dxt`
          2. Drag and drop into Claude Code
          
          ### JetBrains IDEs
          1. Download `hanzo-ai-jetbrains.zip`
          2. Open Settings → Plugins → ⚙️ → Install Plugin from Disk
          3. Select the downloaded file
          
          ## Features
          - ✅ Access to 200+ LLM models via Hanzo AI
          - ✅ 4000+ MCP servers (auto-install)
          - ✅ AI-powered symbol search
          - ✅ 45+ legendary coding modes
          - ✅ Browser automation
          - ✅ Team collaboration
    
    - name: Upload VS Code Extension
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/vscode-extension/hanzo-ai-*.vsix
        asset_name: hanzo-ai-vscode.vsix
        asset_content_type: application/zip
    
    - name: Upload Claude Extension
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/claude-extension/hanzo-ai-*.dxt
        asset_name: hanzo-ai-claude.dxt
        asset_content_type: application/octet-stream
    
    - name: Upload JetBrains Plugin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/jetbrains-plugin/Hanzo AI-*.zip
        asset_name: hanzo-ai-jetbrains.zip
        asset_content_type: application/zip